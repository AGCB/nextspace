# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
#
#


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = bsdtestharness$(EXEEXT) bsdtestsummarize$(EXEEXT) \
	$(am__EXEEXT_3)
TESTS = dispatch_apply$(EXEEXT) dispatch_api$(EXEEXT) \
	dispatch_c99$(EXEEXT) dispatch_debug$(EXEEXT) \
	dispatch_queue_finalizer$(EXEEXT) dispatch_group$(EXEEXT) \
	dispatch_overcommit$(EXEEXT) dispatch_pingpong$(EXEEXT) \
	dispatch_plusplus$(EXEEXT) dispatch_priority$(EXEEXT) \
	dispatch_priority2$(EXEEXT) dispatch_concur$(EXEEXT) \
	dispatch_context_for_key$(EXEEXT) dispatch_proc$(EXEEXT) \
	dispatch_read$(EXEEXT) dispatch_read2$(EXEEXT) \
	dispatch_after$(EXEEXT) dispatch_timer$(EXEEXT) \
	dispatch_timer_short$(EXEEXT) dispatch_timer_timeout$(EXEEXT) \
	dispatch_sema$(EXEEXT) dispatch_suspend_timer$(EXEEXT) \
	dispatch_timer_bit31$(EXEEXT) dispatch_timer_bit63$(EXEEXT) \
	dispatch_timer_set_time$(EXEEXT) dispatch_starfish$(EXEEXT) \
	dispatch_cascade$(EXEEXT) dispatch_drift$(EXEEXT) \
	dispatch_readsync$(EXEEXT) dispatch_data$(EXEEXT) \
	dispatch_io$(EXEEXT) dispatch_io_net$(EXEEXT) \
	dispatch_vm$(EXEEXT) dispatch_vnode$(EXEEXT) \
	dispatch_select$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2)
@HAVE_COREFOUNDATION_TRUE@am__append_1 = \
@HAVE_COREFOUNDATION_TRUE@	dispatch_cf_main			\
@HAVE_COREFOUNDATION_TRUE@	dispatch_transform			\
@HAVE_COREFOUNDATION_TRUE@	dispatch_sync_on_main		\
@HAVE_COREFOUNDATION_TRUE@	cffd

@HAVE_FOUNDATION_TRUE@am__append_2 = \
@HAVE_FOUNDATION_TRUE@	dispatch_sync_gc			\
@HAVE_FOUNDATION_TRUE@	dispatch_apply_gc			\
@HAVE_FOUNDATION_TRUE@	nsoperation					\
@HAVE_FOUNDATION_TRUE@	bench

subdir = testing
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/bench.mm $(srcdir)/leaks-wrapper.sh
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/atomic.m4 \
	$(top_srcdir)/m4/blocks.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/config.h
CONFIG_CLEAN_FILES = dispatch bench.cc leaks-wrapper
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libbsdtests_la_LIBADD =
am_libbsdtests_la_OBJECTS = bsdtests.lo dispatch_test.lo asprintf.lo \
	arc4random.lo fgetln.lo
libbsdtests_la_OBJECTS = $(am_libbsdtests_la_OBJECTS)
libbsdtests_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libbsdtests_la_LDFLAGS) $(LDFLAGS) -o $@
@HAVE_COREFOUNDATION_TRUE@am__EXEEXT_1 = dispatch_cf_main$(EXEEXT) \
@HAVE_COREFOUNDATION_TRUE@	dispatch_transform$(EXEEXT) \
@HAVE_COREFOUNDATION_TRUE@	dispatch_sync_on_main$(EXEEXT) \
@HAVE_COREFOUNDATION_TRUE@	cffd$(EXEEXT)
@HAVE_FOUNDATION_TRUE@am__EXEEXT_2 = dispatch_sync_gc$(EXEEXT) \
@HAVE_FOUNDATION_TRUE@	dispatch_apply_gc$(EXEEXT) \
@HAVE_FOUNDATION_TRUE@	nsoperation$(EXEEXT) bench$(EXEEXT)
am__EXEEXT_3 = dispatch_apply$(EXEEXT) dispatch_api$(EXEEXT) \
	dispatch_c99$(EXEEXT) dispatch_debug$(EXEEXT) \
	dispatch_queue_finalizer$(EXEEXT) dispatch_group$(EXEEXT) \
	dispatch_overcommit$(EXEEXT) dispatch_pingpong$(EXEEXT) \
	dispatch_plusplus$(EXEEXT) dispatch_priority$(EXEEXT) \
	dispatch_priority2$(EXEEXT) dispatch_concur$(EXEEXT) \
	dispatch_context_for_key$(EXEEXT) dispatch_proc$(EXEEXT) \
	dispatch_read$(EXEEXT) dispatch_read2$(EXEEXT) \
	dispatch_after$(EXEEXT) dispatch_timer$(EXEEXT) \
	dispatch_timer_short$(EXEEXT) dispatch_timer_timeout$(EXEEXT) \
	dispatch_sema$(EXEEXT) dispatch_suspend_timer$(EXEEXT) \
	dispatch_timer_bit31$(EXEEXT) dispatch_timer_bit63$(EXEEXT) \
	dispatch_timer_set_time$(EXEEXT) dispatch_starfish$(EXEEXT) \
	dispatch_cascade$(EXEEXT) dispatch_drift$(EXEEXT) \
	dispatch_readsync$(EXEEXT) dispatch_data$(EXEEXT) \
	dispatch_io$(EXEEXT) dispatch_io_net$(EXEEXT) \
	dispatch_vm$(EXEEXT) dispatch_vnode$(EXEEXT) \
	dispatch_select$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2)
am__bench_SOURCES_DIST = func.c
@HAVE_FOUNDATION_TRUE@am_bench_OBJECTS = func.$(OBJEXT)
@HAVE_FOUNDATION_TRUE@nodist_bench_OBJECTS = bench.$(OBJEXT)
bench_OBJECTS = $(am_bench_OBJECTS) $(nodist_bench_OBJECTS)
bench_LDADD = $(LDADD)
bench_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
bench_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bench_LDFLAGS) $(LDFLAGS) -o $@
bsdtestharness_SOURCES = bsdtestharness.c
bsdtestharness_OBJECTS = bsdtestharness.$(OBJEXT)
bsdtestharness_LDADD = $(LDADD)
bsdtestharness_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
bsdtestsummarize_SOURCES = bsdtestsummarize.c
bsdtestsummarize_OBJECTS = bsdtestsummarize.$(OBJEXT)
bsdtestsummarize_LDADD = $(LDADD)
bsdtestsummarize_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
cffd_SOURCES = cffd.c
cffd_OBJECTS = cffd.$(OBJEXT)
cffd_LDADD = $(LDADD)
cffd_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
cffd_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(cffd_LDFLAGS) \
	$(LDFLAGS) -o $@
dispatch_after_SOURCES = dispatch_after.c
dispatch_after_OBJECTS = dispatch_after.$(OBJEXT)
dispatch_after_LDADD = $(LDADD)
dispatch_after_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_api_SOURCES = dispatch_api.c
dispatch_api_OBJECTS = dispatch_api.$(OBJEXT)
dispatch_api_LDADD = $(LDADD)
dispatch_api_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_apply_SOURCES = dispatch_apply.c
dispatch_apply_OBJECTS = dispatch_apply.$(OBJEXT)
dispatch_apply_LDADD = $(LDADD)
dispatch_apply_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
am__dispatch_apply_gc_SOURCES_DIST = dispatch_apply_gc.m
@HAVE_FOUNDATION_TRUE@am_dispatch_apply_gc_OBJECTS =  \
@HAVE_FOUNDATION_TRUE@	dispatch_apply_gc.$(OBJEXT)
dispatch_apply_gc_OBJECTS = $(am_dispatch_apply_gc_OBJECTS)
dispatch_apply_gc_LDADD = $(LDADD)
dispatch_apply_gc_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_apply_gc_LINK = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) \
	$(dispatch_apply_gc_LDFLAGS) $(LDFLAGS) -o $@
dispatch_c99_SOURCES = dispatch_c99.c
dispatch_c99_OBJECTS = dispatch_c99-dispatch_c99.$(OBJEXT)
dispatch_c99_LDADD = $(LDADD)
dispatch_c99_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_c99_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dispatch_c99_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
dispatch_cascade_SOURCES = dispatch_cascade.c
dispatch_cascade_OBJECTS = dispatch_cascade.$(OBJEXT)
dispatch_cascade_LDADD = $(LDADD)
dispatch_cascade_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_cf_main_SOURCES = dispatch_cf_main.c
dispatch_cf_main_OBJECTS = dispatch_cf_main.$(OBJEXT)
dispatch_cf_main_LDADD = $(LDADD)
dispatch_cf_main_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_cf_main_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(dispatch_cf_main_LDFLAGS) $(LDFLAGS) -o $@
dispatch_concur_SOURCES = dispatch_concur.c
dispatch_concur_OBJECTS = dispatch_concur.$(OBJEXT)
dispatch_concur_LDADD = $(LDADD)
dispatch_concur_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_context_for_key_SOURCES = dispatch_context_for_key.c
dispatch_context_for_key_OBJECTS = dispatch_context_for_key.$(OBJEXT)
dispatch_context_for_key_LDADD = $(LDADD)
dispatch_context_for_key_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
dispatch_data_SOURCES = dispatch_data.c
dispatch_data_OBJECTS = dispatch_data.$(OBJEXT)
dispatch_data_LDADD = $(LDADD)
dispatch_data_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_debug_SOURCES = dispatch_debug.c
dispatch_debug_OBJECTS = dispatch_debug.$(OBJEXT)
dispatch_debug_LDADD = $(LDADD)
dispatch_debug_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_drift_SOURCES = dispatch_drift.c
dispatch_drift_OBJECTS = dispatch_drift.$(OBJEXT)
dispatch_drift_LDADD = $(LDADD)
dispatch_drift_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_group_SOURCES = dispatch_group.c
dispatch_group_OBJECTS = dispatch_group.$(OBJEXT)
dispatch_group_LDADD = $(LDADD)
dispatch_group_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_io_SOURCES = dispatch_io.c
dispatch_io_OBJECTS = dispatch_io.$(OBJEXT)
dispatch_io_LDADD = $(LDADD)
dispatch_io_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_io_net_SOURCES = dispatch_io_net.c
dispatch_io_net_OBJECTS = dispatch_io_net.$(OBJEXT)
dispatch_io_net_LDADD = $(LDADD)
dispatch_io_net_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_overcommit_SOURCES = dispatch_overcommit.c
dispatch_overcommit_OBJECTS = dispatch_overcommit.$(OBJEXT)
dispatch_overcommit_LDADD = $(LDADD)
dispatch_overcommit_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
dispatch_pingpong_SOURCES = dispatch_pingpong.c
dispatch_pingpong_OBJECTS = dispatch_pingpong.$(OBJEXT)
dispatch_pingpong_LDADD = $(LDADD)
dispatch_pingpong_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
am_dispatch_plusplus_OBJECTS = dispatch_plusplus.$(OBJEXT)
dispatch_plusplus_OBJECTS = $(am_dispatch_plusplus_OBJECTS)
dispatch_plusplus_LDADD = $(LDADD)
dispatch_plusplus_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_priority_SOURCES = dispatch_priority.c
dispatch_priority_OBJECTS = dispatch_priority.$(OBJEXT)
dispatch_priority_LDADD = $(LDADD)
dispatch_priority_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
am_dispatch_priority2_OBJECTS =  \
	dispatch_priority2-dispatch_priority.$(OBJEXT)
dispatch_priority2_OBJECTS = $(am_dispatch_priority2_OBJECTS)
dispatch_priority2_LDADD = $(LDADD)
dispatch_priority2_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_proc_SOURCES = dispatch_proc.c
dispatch_proc_OBJECTS = dispatch_proc.$(OBJEXT)
dispatch_proc_LDADD = $(LDADD)
dispatch_proc_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_queue_finalizer_SOURCES = dispatch_queue_finalizer.c
dispatch_queue_finalizer_OBJECTS = dispatch_queue_finalizer.$(OBJEXT)
dispatch_queue_finalizer_LDADD = $(LDADD)
dispatch_queue_finalizer_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
dispatch_read_SOURCES = dispatch_read.c
dispatch_read_OBJECTS = dispatch_read.$(OBJEXT)
dispatch_read_LDADD = $(LDADD)
dispatch_read_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_read2_SOURCES = dispatch_read2.c
dispatch_read2_OBJECTS = dispatch_read2.$(OBJEXT)
dispatch_read2_LDADD = $(LDADD)
dispatch_read2_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_readsync_SOURCES = dispatch_readsync.c
dispatch_readsync_OBJECTS = dispatch_readsync.$(OBJEXT)
dispatch_readsync_LDADD = $(LDADD)
dispatch_readsync_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_select_SOURCES = dispatch_select.c
dispatch_select_OBJECTS = dispatch_select.$(OBJEXT)
dispatch_select_LDADD = $(LDADD)
dispatch_select_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_sema_SOURCES = dispatch_sema.c
dispatch_sema_OBJECTS = dispatch_sema.$(OBJEXT)
dispatch_sema_LDADD = $(LDADD)
dispatch_sema_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_starfish_SOURCES = dispatch_starfish.c
dispatch_starfish_OBJECTS = dispatch_starfish.$(OBJEXT)
dispatch_starfish_LDADD = $(LDADD)
dispatch_starfish_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_suspend_timer_SOURCES = dispatch_suspend_timer.c
dispatch_suspend_timer_OBJECTS = dispatch_suspend_timer.$(OBJEXT)
dispatch_suspend_timer_LDADD = $(LDADD)
dispatch_suspend_timer_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
am__dispatch_sync_gc_SOURCES_DIST = dispatch_sync_gc.m
@HAVE_FOUNDATION_TRUE@am_dispatch_sync_gc_OBJECTS =  \
@HAVE_FOUNDATION_TRUE@	dispatch_sync_gc.$(OBJEXT)
dispatch_sync_gc_OBJECTS = $(am_dispatch_sync_gc_OBJECTS)
dispatch_sync_gc_LDADD = $(LDADD)
dispatch_sync_gc_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_sync_gc_LINK = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) \
	$(dispatch_sync_gc_LDFLAGS) $(LDFLAGS) -o $@
dispatch_sync_on_main_SOURCES = dispatch_sync_on_main.c
dispatch_sync_on_main_OBJECTS = dispatch_sync_on_main.$(OBJEXT)
dispatch_sync_on_main_LDADD = $(LDADD)
dispatch_sync_on_main_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
dispatch_sync_on_main_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(dispatch_sync_on_main_LDFLAGS) $(LDFLAGS) -o $@
dispatch_timer_SOURCES = dispatch_timer.c
dispatch_timer_OBJECTS = dispatch_timer.$(OBJEXT)
dispatch_timer_LDADD = $(LDADD)
dispatch_timer_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_timer_bit31_SOURCES = dispatch_timer_bit31.c
dispatch_timer_bit31_OBJECTS = dispatch_timer_bit31.$(OBJEXT)
dispatch_timer_bit31_LDADD = $(LDADD)
dispatch_timer_bit31_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
dispatch_timer_bit63_SOURCES = dispatch_timer_bit63.c
dispatch_timer_bit63_OBJECTS = dispatch_timer_bit63.$(OBJEXT)
dispatch_timer_bit63_LDADD = $(LDADD)
dispatch_timer_bit63_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
dispatch_timer_set_time_SOURCES = dispatch_timer_set_time.c
dispatch_timer_set_time_OBJECTS = dispatch_timer_set_time.$(OBJEXT)
dispatch_timer_set_time_LDADD = $(LDADD)
dispatch_timer_set_time_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
dispatch_timer_short_SOURCES = dispatch_timer_short.c
dispatch_timer_short_OBJECTS = dispatch_timer_short.$(OBJEXT)
dispatch_timer_short_LDADD = $(LDADD)
dispatch_timer_short_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
dispatch_timer_timeout_SOURCES = dispatch_timer_timeout.c
dispatch_timer_timeout_OBJECTS = dispatch_timer_timeout.$(OBJEXT)
dispatch_timer_timeout_LDADD = $(LDADD)
dispatch_timer_timeout_DEPENDENCIES = libbsdtests.la \
	../src/libdispatch.la
dispatch_transform_SOURCES = dispatch_transform.c
dispatch_transform_OBJECTS = dispatch_transform.$(OBJEXT)
dispatch_transform_LDADD = $(LDADD)
dispatch_transform_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_transform_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(dispatch_transform_LDFLAGS) $(LDFLAGS) -o $@
dispatch_vm_SOURCES = dispatch_vm.c
dispatch_vm_OBJECTS = dispatch_vm.$(OBJEXT)
dispatch_vm_LDADD = $(LDADD)
dispatch_vm_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
dispatch_vnode_SOURCES = dispatch_vnode.c
dispatch_vnode_OBJECTS = dispatch_vnode.$(OBJEXT)
dispatch_vnode_LDADD = $(LDADD)
dispatch_vnode_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
am__nsoperation_SOURCES_DIST = nsoperation.m
@HAVE_FOUNDATION_TRUE@am_nsoperation_OBJECTS = nsoperation.$(OBJEXT)
nsoperation_OBJECTS = $(am_nsoperation_OBJECTS)
nsoperation_LDADD = $(LDADD)
nsoperation_DEPENDENCIES = libbsdtests.la ../src/libdispatch.la
nsoperation_LINK = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) \
	$(nsoperation_LDFLAGS) $(LDFLAGS) -o $@
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/config
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
LTOBJCCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
OBJCLD = $(OBJC)
OBJCLINK = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libbsdtests_la_SOURCES) $(bench_SOURCES) \
	$(nodist_bench_SOURCES) bsdtestharness.c bsdtestsummarize.c \
	cffd.c dispatch_after.c dispatch_api.c dispatch_apply.c \
	$(dispatch_apply_gc_SOURCES) dispatch_c99.c dispatch_cascade.c \
	dispatch_cf_main.c dispatch_concur.c \
	dispatch_context_for_key.c dispatch_data.c dispatch_debug.c \
	dispatch_drift.c dispatch_group.c dispatch_io.c \
	dispatch_io_net.c dispatch_overcommit.c dispatch_pingpong.c \
	$(dispatch_plusplus_SOURCES) dispatch_priority.c \
	$(dispatch_priority2_SOURCES) dispatch_proc.c \
	dispatch_queue_finalizer.c dispatch_read.c dispatch_read2.c \
	dispatch_readsync.c dispatch_select.c dispatch_sema.c \
	dispatch_starfish.c dispatch_suspend_timer.c \
	$(dispatch_sync_gc_SOURCES) dispatch_sync_on_main.c \
	dispatch_timer.c dispatch_timer_bit31.c dispatch_timer_bit63.c \
	dispatch_timer_set_time.c dispatch_timer_short.c \
	dispatch_timer_timeout.c dispatch_transform.c dispatch_vm.c \
	dispatch_vnode.c $(nsoperation_SOURCES)
DIST_SOURCES = $(libbsdtests_la_SOURCES) $(am__bench_SOURCES_DIST) \
	bsdtestharness.c bsdtestsummarize.c cffd.c dispatch_after.c \
	dispatch_api.c dispatch_apply.c \
	$(am__dispatch_apply_gc_SOURCES_DIST) dispatch_c99.c \
	dispatch_cascade.c dispatch_cf_main.c dispatch_concur.c \
	dispatch_context_for_key.c dispatch_data.c dispatch_debug.c \
	dispatch_drift.c dispatch_group.c dispatch_io.c \
	dispatch_io_net.c dispatch_overcommit.c dispatch_pingpong.c \
	$(dispatch_plusplus_SOURCES) dispatch_priority.c \
	$(dispatch_priority2_SOURCES) dispatch_proc.c \
	dispatch_queue_finalizer.c dispatch_read.c dispatch_read2.c \
	dispatch_readsync.c dispatch_select.c dispatch_sema.c \
	dispatch_starfish.c dispatch_suspend_timer.c \
	$(am__dispatch_sync_gc_SOURCES_DIST) dispatch_sync_on_main.c \
	dispatch_timer.c dispatch_timer_bit31.c dispatch_timer_bit63.c \
	dispatch_timer_set_time.c dispatch_timer_short.c \
	dispatch_timer_timeout.c dispatch_transform.c dispatch_vm.c \
	dispatch_vnode.c $(am__nsoperation_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CBLOCKS_FLAGS = @CBLOCKS_FLAGS@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXBLOCKS_FLAGS = @CXXBLOCKS_FLAGS@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KQUEUE_CFLAGS = @KQUEUE_CFLAGS@
KQUEUE_LIBS = @KQUEUE_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEAKS = @LEAKS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MARCH_FLAGS = @MARCH_FLAGS@
MIG = @MIG@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJC = @OBJC@
OBJCFLAGS = @OBJCFLAGS@
OBJCPP = @OBJCPP@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OMIT_LEAF_FP_FLAGS = @OMIT_LEAF_FP_FLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
VISIBILITY_FLAGS = @VISIBILITY_FLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_OBJC = @ac_ct_OBJC@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LTLIBRARIES = libbsdtests.la
libbsdtests_la_SOURCES = \
	bsdtests.c					\
	bsdtests.h					\
	dispatch_test.c				\
	dispatch_test.h				\
	shims.h						\
	shims/asprintf.c			\
	shims/asprintf.h			\
	shims/arc4random.c			\
	shims/arc4random.h			\
	shims/fgetln.c				\
	shims/fgetln.h

noinst_SCRIPTS = leaks-wrapper.sh
dispatch_c99_CFLAGS = $(AM_CFLAGS) -std=c99
dispatch_plusplus_SOURCES = dispatch_plusplus.cpp
dispatch_priority2_SOURCES = dispatch_priority.c
dispatch_priority2_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_SET_TARGET_QUEUE=1
AM_CPPFLAGS = -I$(top_builddir) -I$(top_srcdir)
AM_CFLAGS = -Wall $(MARCH_FLAGS) $(CBLOCKS_FLAGS) $(KQUEUE_CFLAGS)
AM_OBJCFLAGS = -Wall $(MARCH_FLAGS) $(CBLOCKS_FLAGS) -fobjc-gc
AM_CXXFLAGS = -Wall $(MARCH_FLAGS) $(CXXBLOCKS_FLAGS)
LDADD = libbsdtests.la ../src/libdispatch.la
libbsdtests_la_LDFLAGS = -avoid-version
TESTS_ENVIRONMENT = ./bsdtestharness
DISTCLEAN = bench.cc
@HAVE_COREFOUNDATION_TRUE@dispatch_cf_main_LDFLAGS = -framework CoreFoundation
@HAVE_COREFOUNDATION_TRUE@dispatch_transform_LDFLAGS = -framework CoreFoundation -framework Security
@HAVE_COREFOUNDATION_TRUE@dispatch_sync_on_main_LDFLAGS = -framework CoreFoundation
@HAVE_COREFOUNDATION_TRUE@cffd_LDFLAGS = -framework CoreFoundation
@HAVE_FOUNDATION_TRUE@dispatch_sync_gc_SOURCES = dispatch_sync_gc.m
@HAVE_FOUNDATION_TRUE@dispatch_sync_gc_LDFLAGS = -framework Foundation
@HAVE_FOUNDATION_TRUE@dispatch_apply_gc_SOURCES = dispatch_apply_gc.m
@HAVE_FOUNDATION_TRUE@dispatch_apply_gc_LDFLAGS = -framework Foundation
@HAVE_FOUNDATION_TRUE@nsoperation_SOURCES = nsoperation.m
@HAVE_FOUNDATION_TRUE@nsoperation_LDFLAGS = -framework Foundation
@HAVE_FOUNDATION_TRUE@nodist_bench_SOURCES = bench.cc
@HAVE_FOUNDATION_TRUE@bench_SOURCES = func.c
@HAVE_FOUNDATION_TRUE@bench_LDFLAGS = -framework Foundation
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .lo .m .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps testing/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps testing/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libbsdtests.la: $(libbsdtests_la_OBJECTS) $(libbsdtests_la_DEPENDENCIES) 
	$(libbsdtests_la_LINK)  $(libbsdtests_la_OBJECTS) $(libbsdtests_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bench$(EXEEXT): $(bench_OBJECTS) $(bench_DEPENDENCIES) 
	@rm -f bench$(EXEEXT)
	$(bench_LINK) $(bench_OBJECTS) $(bench_LDADD) $(LIBS)
bsdtestharness$(EXEEXT): $(bsdtestharness_OBJECTS) $(bsdtestharness_DEPENDENCIES) 
	@rm -f bsdtestharness$(EXEEXT)
	$(LINK) $(bsdtestharness_OBJECTS) $(bsdtestharness_LDADD) $(LIBS)
bsdtestsummarize$(EXEEXT): $(bsdtestsummarize_OBJECTS) $(bsdtestsummarize_DEPENDENCIES) 
	@rm -f bsdtestsummarize$(EXEEXT)
	$(LINK) $(bsdtestsummarize_OBJECTS) $(bsdtestsummarize_LDADD) $(LIBS)
cffd$(EXEEXT): $(cffd_OBJECTS) $(cffd_DEPENDENCIES) 
	@rm -f cffd$(EXEEXT)
	$(cffd_LINK) $(cffd_OBJECTS) $(cffd_LDADD) $(LIBS)
dispatch_after$(EXEEXT): $(dispatch_after_OBJECTS) $(dispatch_after_DEPENDENCIES) 
	@rm -f dispatch_after$(EXEEXT)
	$(LINK) $(dispatch_after_OBJECTS) $(dispatch_after_LDADD) $(LIBS)
dispatch_api$(EXEEXT): $(dispatch_api_OBJECTS) $(dispatch_api_DEPENDENCIES) 
	@rm -f dispatch_api$(EXEEXT)
	$(LINK) $(dispatch_api_OBJECTS) $(dispatch_api_LDADD) $(LIBS)
dispatch_apply$(EXEEXT): $(dispatch_apply_OBJECTS) $(dispatch_apply_DEPENDENCIES) 
	@rm -f dispatch_apply$(EXEEXT)
	$(LINK) $(dispatch_apply_OBJECTS) $(dispatch_apply_LDADD) $(LIBS)
dispatch_apply_gc$(EXEEXT): $(dispatch_apply_gc_OBJECTS) $(dispatch_apply_gc_DEPENDENCIES) 
	@rm -f dispatch_apply_gc$(EXEEXT)
	$(dispatch_apply_gc_LINK) $(dispatch_apply_gc_OBJECTS) $(dispatch_apply_gc_LDADD) $(LIBS)
dispatch_c99$(EXEEXT): $(dispatch_c99_OBJECTS) $(dispatch_c99_DEPENDENCIES) 
	@rm -f dispatch_c99$(EXEEXT)
	$(dispatch_c99_LINK) $(dispatch_c99_OBJECTS) $(dispatch_c99_LDADD) $(LIBS)
dispatch_cascade$(EXEEXT): $(dispatch_cascade_OBJECTS) $(dispatch_cascade_DEPENDENCIES) 
	@rm -f dispatch_cascade$(EXEEXT)
	$(LINK) $(dispatch_cascade_OBJECTS) $(dispatch_cascade_LDADD) $(LIBS)
dispatch_cf_main$(EXEEXT): $(dispatch_cf_main_OBJECTS) $(dispatch_cf_main_DEPENDENCIES) 
	@rm -f dispatch_cf_main$(EXEEXT)
	$(dispatch_cf_main_LINK) $(dispatch_cf_main_OBJECTS) $(dispatch_cf_main_LDADD) $(LIBS)
dispatch_concur$(EXEEXT): $(dispatch_concur_OBJECTS) $(dispatch_concur_DEPENDENCIES) 
	@rm -f dispatch_concur$(EXEEXT)
	$(LINK) $(dispatch_concur_OBJECTS) $(dispatch_concur_LDADD) $(LIBS)
dispatch_context_for_key$(EXEEXT): $(dispatch_context_for_key_OBJECTS) $(dispatch_context_for_key_DEPENDENCIES) 
	@rm -f dispatch_context_for_key$(EXEEXT)
	$(LINK) $(dispatch_context_for_key_OBJECTS) $(dispatch_context_for_key_LDADD) $(LIBS)
dispatch_data$(EXEEXT): $(dispatch_data_OBJECTS) $(dispatch_data_DEPENDENCIES) 
	@rm -f dispatch_data$(EXEEXT)
	$(LINK) $(dispatch_data_OBJECTS) $(dispatch_data_LDADD) $(LIBS)
dispatch_debug$(EXEEXT): $(dispatch_debug_OBJECTS) $(dispatch_debug_DEPENDENCIES) 
	@rm -f dispatch_debug$(EXEEXT)
	$(LINK) $(dispatch_debug_OBJECTS) $(dispatch_debug_LDADD) $(LIBS)
dispatch_drift$(EXEEXT): $(dispatch_drift_OBJECTS) $(dispatch_drift_DEPENDENCIES) 
	@rm -f dispatch_drift$(EXEEXT)
	$(LINK) $(dispatch_drift_OBJECTS) $(dispatch_drift_LDADD) $(LIBS)
dispatch_group$(EXEEXT): $(dispatch_group_OBJECTS) $(dispatch_group_DEPENDENCIES) 
	@rm -f dispatch_group$(EXEEXT)
	$(LINK) $(dispatch_group_OBJECTS) $(dispatch_group_LDADD) $(LIBS)
dispatch_io$(EXEEXT): $(dispatch_io_OBJECTS) $(dispatch_io_DEPENDENCIES) 
	@rm -f dispatch_io$(EXEEXT)
	$(LINK) $(dispatch_io_OBJECTS) $(dispatch_io_LDADD) $(LIBS)
dispatch_io_net$(EXEEXT): $(dispatch_io_net_OBJECTS) $(dispatch_io_net_DEPENDENCIES) 
	@rm -f dispatch_io_net$(EXEEXT)
	$(LINK) $(dispatch_io_net_OBJECTS) $(dispatch_io_net_LDADD) $(LIBS)
dispatch_overcommit$(EXEEXT): $(dispatch_overcommit_OBJECTS) $(dispatch_overcommit_DEPENDENCIES) 
	@rm -f dispatch_overcommit$(EXEEXT)
	$(LINK) $(dispatch_overcommit_OBJECTS) $(dispatch_overcommit_LDADD) $(LIBS)
dispatch_pingpong$(EXEEXT): $(dispatch_pingpong_OBJECTS) $(dispatch_pingpong_DEPENDENCIES) 
	@rm -f dispatch_pingpong$(EXEEXT)
	$(LINK) $(dispatch_pingpong_OBJECTS) $(dispatch_pingpong_LDADD) $(LIBS)
dispatch_plusplus$(EXEEXT): $(dispatch_plusplus_OBJECTS) $(dispatch_plusplus_DEPENDENCIES) 
	@rm -f dispatch_plusplus$(EXEEXT)
	$(CXXLINK) $(dispatch_plusplus_OBJECTS) $(dispatch_plusplus_LDADD) $(LIBS)
dispatch_priority$(EXEEXT): $(dispatch_priority_OBJECTS) $(dispatch_priority_DEPENDENCIES) 
	@rm -f dispatch_priority$(EXEEXT)
	$(LINK) $(dispatch_priority_OBJECTS) $(dispatch_priority_LDADD) $(LIBS)
dispatch_priority2$(EXEEXT): $(dispatch_priority2_OBJECTS) $(dispatch_priority2_DEPENDENCIES) 
	@rm -f dispatch_priority2$(EXEEXT)
	$(LINK) $(dispatch_priority2_OBJECTS) $(dispatch_priority2_LDADD) $(LIBS)
dispatch_proc$(EXEEXT): $(dispatch_proc_OBJECTS) $(dispatch_proc_DEPENDENCIES) 
	@rm -f dispatch_proc$(EXEEXT)
	$(LINK) $(dispatch_proc_OBJECTS) $(dispatch_proc_LDADD) $(LIBS)
dispatch_queue_finalizer$(EXEEXT): $(dispatch_queue_finalizer_OBJECTS) $(dispatch_queue_finalizer_DEPENDENCIES) 
	@rm -f dispatch_queue_finalizer$(EXEEXT)
	$(LINK) $(dispatch_queue_finalizer_OBJECTS) $(dispatch_queue_finalizer_LDADD) $(LIBS)
dispatch_read$(EXEEXT): $(dispatch_read_OBJECTS) $(dispatch_read_DEPENDENCIES) 
	@rm -f dispatch_read$(EXEEXT)
	$(LINK) $(dispatch_read_OBJECTS) $(dispatch_read_LDADD) $(LIBS)
dispatch_read2$(EXEEXT): $(dispatch_read2_OBJECTS) $(dispatch_read2_DEPENDENCIES) 
	@rm -f dispatch_read2$(EXEEXT)
	$(LINK) $(dispatch_read2_OBJECTS) $(dispatch_read2_LDADD) $(LIBS)
dispatch_readsync$(EXEEXT): $(dispatch_readsync_OBJECTS) $(dispatch_readsync_DEPENDENCIES) 
	@rm -f dispatch_readsync$(EXEEXT)
	$(LINK) $(dispatch_readsync_OBJECTS) $(dispatch_readsync_LDADD) $(LIBS)
dispatch_select$(EXEEXT): $(dispatch_select_OBJECTS) $(dispatch_select_DEPENDENCIES) 
	@rm -f dispatch_select$(EXEEXT)
	$(LINK) $(dispatch_select_OBJECTS) $(dispatch_select_LDADD) $(LIBS)
dispatch_sema$(EXEEXT): $(dispatch_sema_OBJECTS) $(dispatch_sema_DEPENDENCIES) 
	@rm -f dispatch_sema$(EXEEXT)
	$(LINK) $(dispatch_sema_OBJECTS) $(dispatch_sema_LDADD) $(LIBS)
dispatch_starfish$(EXEEXT): $(dispatch_starfish_OBJECTS) $(dispatch_starfish_DEPENDENCIES) 
	@rm -f dispatch_starfish$(EXEEXT)
	$(LINK) $(dispatch_starfish_OBJECTS) $(dispatch_starfish_LDADD) $(LIBS)
dispatch_suspend_timer$(EXEEXT): $(dispatch_suspend_timer_OBJECTS) $(dispatch_suspend_timer_DEPENDENCIES) 
	@rm -f dispatch_suspend_timer$(EXEEXT)
	$(LINK) $(dispatch_suspend_timer_OBJECTS) $(dispatch_suspend_timer_LDADD) $(LIBS)
dispatch_sync_gc$(EXEEXT): $(dispatch_sync_gc_OBJECTS) $(dispatch_sync_gc_DEPENDENCIES) 
	@rm -f dispatch_sync_gc$(EXEEXT)
	$(dispatch_sync_gc_LINK) $(dispatch_sync_gc_OBJECTS) $(dispatch_sync_gc_LDADD) $(LIBS)
dispatch_sync_on_main$(EXEEXT): $(dispatch_sync_on_main_OBJECTS) $(dispatch_sync_on_main_DEPENDENCIES) 
	@rm -f dispatch_sync_on_main$(EXEEXT)
	$(dispatch_sync_on_main_LINK) $(dispatch_sync_on_main_OBJECTS) $(dispatch_sync_on_main_LDADD) $(LIBS)
dispatch_timer$(EXEEXT): $(dispatch_timer_OBJECTS) $(dispatch_timer_DEPENDENCIES) 
	@rm -f dispatch_timer$(EXEEXT)
	$(LINK) $(dispatch_timer_OBJECTS) $(dispatch_timer_LDADD) $(LIBS)
dispatch_timer_bit31$(EXEEXT): $(dispatch_timer_bit31_OBJECTS) $(dispatch_timer_bit31_DEPENDENCIES) 
	@rm -f dispatch_timer_bit31$(EXEEXT)
	$(LINK) $(dispatch_timer_bit31_OBJECTS) $(dispatch_timer_bit31_LDADD) $(LIBS)
dispatch_timer_bit63$(EXEEXT): $(dispatch_timer_bit63_OBJECTS) $(dispatch_timer_bit63_DEPENDENCIES) 
	@rm -f dispatch_timer_bit63$(EXEEXT)
	$(LINK) $(dispatch_timer_bit63_OBJECTS) $(dispatch_timer_bit63_LDADD) $(LIBS)
dispatch_timer_set_time$(EXEEXT): $(dispatch_timer_set_time_OBJECTS) $(dispatch_timer_set_time_DEPENDENCIES) 
	@rm -f dispatch_timer_set_time$(EXEEXT)
	$(LINK) $(dispatch_timer_set_time_OBJECTS) $(dispatch_timer_set_time_LDADD) $(LIBS)
dispatch_timer_short$(EXEEXT): $(dispatch_timer_short_OBJECTS) $(dispatch_timer_short_DEPENDENCIES) 
	@rm -f dispatch_timer_short$(EXEEXT)
	$(LINK) $(dispatch_timer_short_OBJECTS) $(dispatch_timer_short_LDADD) $(LIBS)
dispatch_timer_timeout$(EXEEXT): $(dispatch_timer_timeout_OBJECTS) $(dispatch_timer_timeout_DEPENDENCIES) 
	@rm -f dispatch_timer_timeout$(EXEEXT)
	$(LINK) $(dispatch_timer_timeout_OBJECTS) $(dispatch_timer_timeout_LDADD) $(LIBS)
dispatch_transform$(EXEEXT): $(dispatch_transform_OBJECTS) $(dispatch_transform_DEPENDENCIES) 
	@rm -f dispatch_transform$(EXEEXT)
	$(dispatch_transform_LINK) $(dispatch_transform_OBJECTS) $(dispatch_transform_LDADD) $(LIBS)
dispatch_vm$(EXEEXT): $(dispatch_vm_OBJECTS) $(dispatch_vm_DEPENDENCIES) 
	@rm -f dispatch_vm$(EXEEXT)
	$(LINK) $(dispatch_vm_OBJECTS) $(dispatch_vm_LDADD) $(LIBS)
dispatch_vnode$(EXEEXT): $(dispatch_vnode_OBJECTS) $(dispatch_vnode_DEPENDENCIES) 
	@rm -f dispatch_vnode$(EXEEXT)
	$(LINK) $(dispatch_vnode_OBJECTS) $(dispatch_vnode_LDADD) $(LIBS)
nsoperation$(EXEEXT): $(nsoperation_OBJECTS) $(nsoperation_DEPENDENCIES) 
	@rm -f nsoperation$(EXEEXT)
	$(nsoperation_LINK) $(nsoperation_OBJECTS) $(nsoperation_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

asprintf.lo: shims/asprintf.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o asprintf.lo `test -f 'shims/asprintf.c' || echo '$(srcdir)/'`shims/asprintf.c

arc4random.lo: shims/arc4random.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o arc4random.lo `test -f 'shims/arc4random.c' || echo '$(srcdir)/'`shims/arc4random.c

fgetln.lo: shims/fgetln.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fgetln.lo `test -f 'shims/fgetln.c' || echo '$(srcdir)/'`shims/fgetln.c

dispatch_c99-dispatch_c99.o: dispatch_c99.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dispatch_c99_CFLAGS) $(CFLAGS) -c -o dispatch_c99-dispatch_c99.o `test -f 'dispatch_c99.c' || echo '$(srcdir)/'`dispatch_c99.c

dispatch_c99-dispatch_c99.obj: dispatch_c99.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dispatch_c99_CFLAGS) $(CFLAGS) -c -o dispatch_c99-dispatch_c99.obj `if test -f 'dispatch_c99.c'; then $(CYGPATH_W) 'dispatch_c99.c'; else $(CYGPATH_W) '$(srcdir)/dispatch_c99.c'; fi`

dispatch_priority2-dispatch_priority.o: dispatch_priority.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dispatch_priority2_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dispatch_priority2-dispatch_priority.o `test -f 'dispatch_priority.c' || echo '$(srcdir)/'`dispatch_priority.c

dispatch_priority2-dispatch_priority.obj: dispatch_priority.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dispatch_priority2_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dispatch_priority2-dispatch_priority.obj `if test -f 'dispatch_priority.c'; then $(CYGPATH_W) 'dispatch_priority.c'; else $(CYGPATH_W) '$(srcdir)/dispatch_priority.c'; fi`

.cc.o:
	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

.cpp.o:
	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

.m.o:
	$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
	$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.m.lo:
	$(LTOBJCCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(SCRIPTS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


@HAVE_MACH_TRUE@	TESTS+=						\
@HAVE_MACH_TRUE@		dispatch_deadname
# Workaround missing objcxx support in older autotools
@HAVE_FOUNDATION_TRUE@bench.o: bench.cc
@HAVE_FOUNDATION_TRUE@	$(CXXCOMPILE) -x objective-c++ -c -o $@ $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
